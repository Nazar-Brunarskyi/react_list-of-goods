{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","NONE","sort","itemA","itemB","ALPHABET","localeCompare","length","reverse","console","log","App","state","handleClickSortAlphabetically","setState","handleClickSortByLength","LENGTH","handleClickReverse","handleClickReset","this","isResetRendered","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAkBzB,OAfIC,IAAaJ,EAASO,MACxBD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAON,IAAaJ,EAASW,SACzBF,EAAMG,cAAcF,GACpBD,EAAMI,OAASH,EAAMG,UAIzBR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAUJ,EAASO,MAHvB,EAMEY,8BAAgC,WAC9B,EAAKC,SAAS,CACZhB,SAAUJ,EAASW,YARzB,EAYEU,wBAA0B,WACxB,EAAKD,SAAS,CACZhB,SAAUJ,EAASsB,UAdzB,EAkBEC,mBAAqB,WACnB,EAAKH,UAAS,SAACF,GAAD,MAAY,CACxBb,YAAaa,EAAMb,gBApBzB,EAwBEmB,iBAAmB,WACjB,EAAKJ,SAAS,CACZf,YAAY,EACZD,SAAUJ,EAASO,QA3BzB,4CA+BE,WACE,MAGIkB,KAAKP,MAFPd,EADF,EACEA,SACAC,EAFF,EAEEA,WAGIqB,EAAkBrB,GAAcD,IAAaJ,EAASO,KAE5D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBvB,IAAaJ,EAASW,SAAW,GAAK,YACnEkB,QAASJ,KAAKN,8BAHhB,iCAQA,wBACES,KAAK,SACLD,UAAS,4BAAuBvB,IAAaJ,EAASsB,OAAS,GAAK,YACpEO,QAASJ,KAAKJ,wBAHhB,4BAQA,wBACEO,KAAK,SACLD,UAAS,4BAAuBtB,EAAa,GAAK,YAClDwB,QAASJ,KAAKF,mBAHhB,qBASGG,GAEC,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAASJ,KAAKD,iBAHhB,sBAYN,6BACE,6BACGtB,EAAkBD,EAAiBwB,KAAKP,OAAOY,KAAI,SAAAC,GAAI,OACtD,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBApFtC,GAAyBC,aC3DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.939aa936.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((itemA, itemB) => {\n      return sortType === SortType.ALPHABET\n        ? itemA.localeCompare(itemB)\n        : itemA.length - itemB.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleClickSortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleClickSortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleClickReverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleClickReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const {\n      sortType,\n      isReversed,\n    } = this.state;\n\n    const isResetRendered = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.handleClickSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={this.handleClickSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n            onClick={this.handleClickReverse}\n          >\n            Reverse\n          </button>\n\n          {\n            (isResetRendered)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.handleClickReset}\n              >\n                Reset\n              </button>\n            )\n          }\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}